Version 0.20.1 -

   * Cleaned Up ShapeManagers Mode handling code to use enums.
   
   * Fixed up the mixed enviornment of zoom level being stored as an int,
     where 100 = 100%, and a double where 1.0d = 100%. Now int method used
     through out source code except for the method calls at end to do the actual
     resizing. It felt appropriate for them to be in terms of decimals.
   
   * Found and fixed and bug with a user creating an empty text shape.
   
   * Fixed SVG Plugin not working bug.

Version 0.20.0 - 26/10/05

   * About Dialog Added.
   
   * Preferences Dialog Added although currently empty.
   
   * Startup preferences panel added to the preferences dialog.
   
   * Fixed Bug 8.
   
   * General preferences panel added to the preferences dialog.
   
   * Changed loading of languages and propertie files to use file
     input streams so that they are now stored outside the jar file.
     Classes affected: com.terei.jvector.language.LangLoader
                       com.terei.jvector.JVector
                       
   * Fixed Bug 10. Project will use Java 1.5 as base now. Compatability
     with Java 1.4 is uncertain at this stage both in terms of current
     code and planned code.
     
   * Many changes were made to update the code to Java 1.5, using the new
     for loop, generics, and autoboxing. Enumerations will be looked at for
     future code refracturing. During this many elements of the code were
     also cleaned up both function wise and visually.
     
   * I think i have a fixed a bug that occured with moving a line while zoomed
     in. However I have been having problems being able to reproduce the bug
     with the original code. Perhaps other changes in the code while I was
     cleaning fixed it. The new code for moving a line is cleaner though
     and more consistent with the rest of the api.
     
   * Updated the BrowserLauncher code to BrowserLauncher2, a project that aims
     to continue the development of BrowserLauncher as the original author no
     longer maintains the project at all.
     
   * Fixed some code that didnt behave nicley, accessing static variables using
     super.static. While it caused no problems the changes result in more
     readable code.
   
   * Fixed bug 9 which turned out to no longer be a bug, see issues for more
     details.
	 
   * Updated the code that managed which tool was currently selected to use enumerations.
     The new code is far cleaner and easier to read. More code is planned to be moved into
	 the new Tool enumerations class to remove all the badly designed code for managing the
	 current tool currently in PaintCanvas.java.

   * Fixed Bug 12, see issues for details. However this pointed out strongly the 
     bad design of the GUI resizing code, not very orthagonal, needs to be
     cleaned up a lot.
   
   * Bug 6 no longer applys as the feature no longer works with Java 1.5. So far
     a short attempt to implement the feature again failed. The way scrollbar
     positions work are very annoying.
	

Version 0.18 - 6/06/04
   
   * Plugins are working! There is now an option under the file menu called, Export...
     that allows you to export to the file types provided by the plugins. This GUI
     is provided by com.terei.jvector.GUI.ImageExporter
     
   * The plugins are loaded through the com.terei.jvector.plugin.ImagePluginManager class.
     Documentation will be made shortley on how to create plugins, but for the moment, looking
     through the existing Plugins, and this class, should provide you with all the information
     you need fairly easily.    

Version 0.16 - 4/06/04

   * Beginning of Plugin Interface added! Plugins must extend an plugin interface,
     so far com.terei.jvector.plugin.ImagePlugin is the only one, and will be for
     ages, maybe ever. It is a plugin used to provide different output formats then
     JVectors native one.
     
   * A JPG, PNG plugin have been written, however, at the moment, dynamic loading and
     managment of plugins is not happening.
     
   * An SVG plugin has been added! By Using another wonderful Apache project,
     the Batik SVG Toolkit (http://xml.apache.org/batik/). So now you can draw
     some stuff in JVector, and export it to SVG (or soon you can) and then
     open it up in your favourite SVG program (http://www.sodipodi.com/), and
     continue edditing it, with layers, and shapes all in tac.
     
   * The beggining of a Plugin Manager has been created, 
     com.terei.jvector.plugin.ImagePluginManager . This class will handle the dynamic
     loading and managment of the plugins. And provide a GUI to access there functions.
     
   * Well some research programs on dynamically loading a java class from a string specified
     path and name has been successful, soon ImagePluginManager should be working.

Version 0.15 - 01/06/04

   * Logging added! (using log4j).
   
   * Zooming in now center's, although slightly off, at the point where the user
     clicked. Currently this causes the image to 'flash' though.
     
   * Close Option Added to File Menu, allows you to close an open image.
   
   * Installation File Created using IzPack.
   
   * Lots of Zooming Bugs Fixed! (See Issues for more details).

Version 0.14 - 23/05/04

   * Shape drawing changed to be more standard. Now mouse press, drag, and then
     release is how it is done, instead of, mouse click, move click.

   * Loading splash screen implemented!

   * Zoom support added! However its still very buggy. Zooming works fine on all shapes,
     even drawing of shapes when zoomed in or out works on most shapes. However, movements
     of shapes doesnt work when zoomed at all, and there are probally numerous other
     smaller bugs.
     
   * Some small bugs fixed to do with JVecotr and Macintosh computers.
   
   * Saving bug fixed.

Version 0.12 - 19/05/04

   * New TextTool added! Works Well. It is a fairly simple design, of setting 
     the text before you draw it, but i would rather use more effort else where 
     then a fairly boring text tool.
     
   * New Tool Added! The selection tool, allows shapes to be selected, and moved
     around. Selected shapes can also be deleted, and in the future modified.
     
   * All shapes now support moving!    

Version 0.1 - 18/05/04

   * Absolutley all JavaDoc updated and Fixed.

   * GUI added for opening an Image, and a File Filter. JVector Image (.jmi)
     is the decided extension of the images.
     
   * GUI added for Save As menu option.
   
   * Save menu option added.
   
   * Enabling and disabling of Save option works appropriatley when chaning
     between tabs.
     
   * Start of Text tool added.

Version 0.08 - 17/05/04

   * Saving Option Added! However, a GUI selector for the path, as well as
     save as need to be added. But other then GUI issues, the hard code is
     working fine!
     
   * Opening of images working! As with saving, the hard code has just been
     done, a GUI still needs to be added.

Version 0.07 - 16/05/04

   * Diabled option added to JColor class, allowing them to be set to disabled,
     upon which they display a white box with a red line through it.

   * Opacity Added! Took longer then expected, because if the defualt java
     2D shapes are used, then their outlines go partly onto the fill, resulting
     in a bad look with opacity. So custom versions that perform the equivelent
     functions of these had to be created. However, The opacity of both the
     fill and the outline for shapes can now be set, idependently!
     
   * Polygon tool added! However, its opacity does not work properly (BUG 4#).

Version 0.06 - 15/05/04

   * Bug 3 partly fixed, but in a poorish manner, so the issue will still
     remain till a better solution is found.

   * Clcking on ethier the background or foreground display
     box now opens a JColorChooser, and then sets the foreground
     or background to the colour chosen.
      
   * A few tweaks and fixes done to ColorPanel.
   
   * Some bugs with the colour tool bar have been fixed.   
   
   * Added Status Bar hints for the buttons in ColorPanel.
   
   * #BUG 3 fixed (see issues for more detail).
     
   * All documentation (internal) updated.

Version 0.05 - 13/05/04

    * ColourPanel class Created. This class creates a colour swatch 
      panel, that allows users to add in colour swatches, remove
      them, and set the background and foreground colour. GUI all
      layed out, although some issues need to be fixed with the
      layout between the colour panel and tool option panel.

    * ColourSwatch class created. This class creates a JPanel that
      displays a selection of colours that users can pick from to
      set the foreground and background colour. It loads the
      colours to use from a properties file.

    * The ColourSwatch class is now loading the colours fine, but
      an issue has been encountered on how to display them. At
      first a JButton was used, but while this works fine under
      some looks and feel (namely those based on the metal look and
      feel, eg kunstoff) on others, such as the windows XP native
      look and feel, it doesn't. JLabel also don't appear to work
      as they appear to have no background fill colour. (this issue
      has been noted as #ISSUE 1).

    * Well alot of work done last night, and the paint swatches are now
      nearly fully done. There operational, except for one bug, and a few
      additional features needed. Beatiful color now enriches Le Paint.
      This means that #ISSUE 1 is ofourse fixed.

    * Switcher icon added for the switcher tool.

    * ColorPanel now dynamically loads the propertie files located in 
      the Resources/Swatches directory, as ColorSwatches.

    * Information button on the Colour Panel now displays the current swatches
      information.

    * Source code refractored to new project name of JVector.

    * #BUG 2 fixed (see issues for more detail).
      
Version 0.04 - 07/05/04.

    * Added Weight option to the line options panel. Lines can
      now be drawn in various thicknesses.
      
    * #BUG 1 fixed.
    
    * Added a Rectangle Tool. This included, a Rectangle shape
      class, RectangleManager class, and RectangleOptions class.
      Other then drawing the rectangle, you can also set the stroke
      of the outline.
      
    * Updated the internal documentation, other then StatusBar
      manager and NewImageDialog, the rest are all fully up to
      date.
      
    * NewImageDialog Internal Documentation completed.
    
    * All Internal Documentation now up to date and complete.

    * Pixel and cm selection added and functional as image
      creation sizes in the NewImageDialog class.

    * Improvements made to the ant build file, source packaging
      target now added.

Version 0.03 - 27/04/04

    * Restructuring of paint canvas to allow some customisations
      and deal with multiple canvases being open at once.    
  
    * Implemented the Shape class, provides a framework for all                 
      other shape class to use.
  
    * Implemented the line class, extends the shape class and
      allows the user to draw a line.
  
    * Implemented the ShapeManager class, this class provides a
      framework for other shape manager classes to use. The purpose
      of these classes is to handle all the drawing operations and
      code for their respective shape. 
      Before, this was all just stored in the PaintCanvas class.
      This new arrangement allows for much cleaner, and more easily
      understood code. It also allows new tools to be implemented
      much more easily.
  
    * Implemented the LineManager class, this class handles all the
      line drawing operations.

    * Implemented the PaintTabbedPane class, to stop users from
      changing the tab during a draw operation.
  
    * Implemented the LineOptions class. This class creates a
      JPanel that is added to the extra tool bar to provide an
      interface to the various options that can be set for drawing
      a line (eg stroke).
  
    # BUG 1: The current method of adding this JPanel to the extra
             tool bar has resulted in a bug, by which, if the tool
             bar is floating, when the line tool is pressed (thus
             the LineOption JPanel created) then a whole new extra
             tool bar is created, instead of the existing one
             modified.                            

Version 0.01 - 24/04/04

    * First Release

    * GUI framework done	

    * Image Creation	
		